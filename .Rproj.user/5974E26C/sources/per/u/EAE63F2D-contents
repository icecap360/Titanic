library(tidyverse)
datt <- read_csv("Data/test.csv")

#finding out type of each column
classes <- sapply(datt, class)[sapply(datt, class)=="character"]

#cabin, name, sex, embarked and ticket are characters
#hence convert them to factors

#however I would rather just remove the name column
ids <- datt$PassengerId
datt <- datt %>% select(-Name, -PassengerId)

classes <- classes[names(classes)!="Name"]
char_datt <- datt %>% select(names(classes))

#we see that there are a lot of NA's in Cabin, 687 in total, but that still leaves about 200 that may be useful
sum(is.na(datt$Cabin))
#However there mostly unique cabins
length(unique(datt$Cabin))
#So I will split the cabin into levels (which will be a letter) and room number (of numeric type)
cabin_split <- str_match(datt$Cabin , "^([A-Z]\\s?[A-Z]?)(\\d+)")
unmatched <- setdiff(datt$Cabin , str_subset(datt$Cabin , "^([A-Z]\\s?[A-Z]?)(\\d+)"))

char_datt$Level <-  cabin_split[,2]
char_datt$Room <- cabin_split[,3]
char_datt$Room <- parse_number(char_datt$Room)
#Now do the same for ticket
tickets_split <- str_match(char_datt$Ticket , "(STON/O\\s2\\.)\\s([0-9]*)|([A-Z.0-9/]*)\\s?([0-9]*)")
char_datt$Boarding <-  ifelse( is.na(tickets_split[,2]) , tickets_split[,4],tickets_split[,2])
char_datt$TNumber <- ifelse( is.na(tickets_split[,3]) , tickets_split[,5],tickets_split[,3])
char_datt$TNumber <- ifelse(is.na(as.numeric(char_datt$TNumber)) & 
                             !is.na(as.numeric(char_datt$Boarding)), char_datt$Boarding , char_datt$TNumber)
char_datt$Boarding <- ifelse(char_datt$Boarding==char_datt$TNumber, "", char_datt$Boarding)
char_datt$Boarding <- ifelse(char_datt$Boarding=="", NA ,char_datt$Boarding)
char_datt$TNumber <- parse_number(char_datt$TNumber)
char_datt$TNumber[is.na(char_datt$TNumber)] <- 0

#Remove numeric and proccessed columns from the char dattaframe
datt$TNumber <- char_datt$TNumber
datt$Room <- char_datt$Room
char_datt <- char_datt %>% select(-TNumber , -Room, -Cabin, -Ticket)

#convert the chardatt to factors
#char_datt <- sapply(char_datt, as.factor)

#finally replace the datta in the original datta with char_datt
datt <- datt %>% select(-names(classes))
datt <- cbind(datt, char_datt)
datt <- as_tibble(datt)
datt <- datt %>% mutate_if(is.character,factor)
datt <- datt %>% mutate_if(function(x){ is.factor(x) & anyNA(x)}, addNA)

datt$Pclass <- ordered(datt$Pclass)

#replace numeric is.na with average
datt <- datt %>% mutate_if(is.numeric, function(x) {
  avg <- mean(x, na.rm = TRUE)
  ifelse(is.na(x), avg, x)
})

#scale numeric columns
datt <- datt %>% mutate_if(is.numeric, ~(scale(.) %>% as.vector))

datt <- mutate(datt, PassengerId=ids)
save(datt, file = "Data/test.rda")